{"remainingRequest":"/Users/anthonycherbuin/Documents/Perso/Matter-js-vue-v1-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anthonycherbuin/Documents/Perso/Matter-js-vue-v1-test/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/anthonycherbuin/Documents/Perso/Matter-js-vue-v1-test/src/App.vue","mtime":1649334295953},{"path":"/Users/anthonycherbuin/Documents/Perso/Matter-js-vue-v1-test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anthonycherbuin/Documents/Perso/Matter-js-vue-v1-test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/anthonycherbuin/Documents/Perso/Matter-js-vue-v1-test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/anthonycherbuin/Documents/Perso/Matter-js-vue-v1-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anthonycherbuin/Documents/Perso/Matter-js-vue-v1-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpib2R5IHsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogMDsKfQojYXBwIHsKICBmb250LWZhbWlseTogJ0F2ZW5pcicsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgYmFja2dyb3VuZDogI2YzZmYwMDsKICB3aWR0aDogMTAwdnc7CiAgaGVpZ2h0OiAxMDB2aDsKfQoKI3NlY3Rpb24xIHsKICBiYWNrZ3JvdW5kOiAjZjNmZjAwOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <main>\n    <section id=\"section1\">section 1</section>\n    <section><div v-on:mousemove=\"mouseMove\" id=\"app\" ref=\"canva\"></div></section>\n    <section>section 3</section>\n    <section>section 4</section>\n  </main>\n</template>\n\n<script>\nimport 'pathseg'\nimport Matter from 'matter-js'\nimport Ola from 'ola'\n\n// const paths = [\n//   'M289.05,84.63L98.225,308.136c-6.35,7.44-9.126,17.291-7.594,26.954l10.514,66.144c1.32,8.312,8.484,14.441,16.901,14.44h66.971c9.785,0,19.079-4.283,25.434-11.725l206.015-241.29c5.93-6.943,5.104-17.379-1.841-23.305l-42.83-36.57c-6.946-5.928-17.38-5.104-23.31,1.837l-152.4,178.477c-3.312,3.872-1.941,7.557-0.754,15.562c0.647,4.358,4.409,7.572,8.817,7.528c8.201-0.082,11.959,0.677,15.254-3.186l104.745-122.653l30.031,25.641l-108.396,126.93c-5.823,6.821-14.307,10.795-23.272,10.904h-40.639c-10.349,0.124-19.191-6.943-20.691-17.18l-5.896-40.215c-1.304-8.875,1.292-17.878,7.118-24.697L321.757,75.111c18.261-21.39,50.409-23.929,71.803-5.664l50.576,43.18c21.395,18.265,23.932,50.414,5.666,71.806L235.457,435.479c-10.447,12.243-25.735,19.284-41.83,19.271h-89.321c-19.688-0.012-36.449-14.382-39.549-33.821l-14.072-88.213c-2.53-15.89,2.027-32.097,12.479-44.339L259.017,58.988L289.05,84.63z'\n// ]\n\nexport default {\n  name: 'App',\n  components: {},\n  data() {\n    return {\n      gravity: null,\n      movingShape1: null,\n      movingShape2: null,\n      mouse: null,\n      cursor: null,\n      accelerometer: 'i',\n      Engine: Matter.Engine,\n      render: null,\n      Render: Matter.Render,\n      Runner: Matter.Runner,\n      Composites: Matter.Composites,\n      Common: Matter.Common,\n      MouseConstraint: Matter.MouseConstraint,\n      Mouse: Matter.Mouse,\n      Composite: Matter.Composite,\n      Bodies: Matter.Bodies,\n      Body: Matter.Body\n    }\n  },\n\n  mounted() {\n    this.init()\n    // fit the render viewport to the scene\n    // Render.lookAt(this.render, {\n    //   min: { x: 0, y: 0 },\n    //   max: { x: window.innerWidth, y: window.innerHeight }\n    // })\n\n    // window.addEventListener('deviceorientation', this.updateGravity())\n    // window.addEventListener('devicemotion', this.updateGravity())\n    // window.addEventListener('MozOrientation', this.updateGravity())\n  },\n  created() {\n    // add gyro control\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.resizeWindow)\n      window.addEventListener('deviceorientation', this.updateGravity)\n      console.log('add lsitener gravity')\n    } else {\n      console.log('nogravity: ')\n    }\n  },\n  methods: {\n    init() {\n      this.xCursor = Ola({ x: 0 }, 1000)\n      this.$refs.canva.remove()\n      var Engine = Matter.Engine,\n        Render = Matter.Render,\n        Runner = Matter.Runner,\n        MouseConstraint = Matter.MouseConstraint,\n        Mouse = Matter.Mouse,\n        World = Matter.World,\n        Bodies = Matter.Bodies\n\n      // create engine\n      var engine = Engine.create(),\n        world = engine.world\n\n      // create renderer\n      this.render = Render.create({\n        element: this.$refs.canva,\n        engine: engine,\n        options: {\n          background: '#f3ff00',\n          width: window.innerWidth,\n          height: window.innerHeight,\n          pixelRatio: 'auto',\n          wireframes: false,\n          showDebug: false,\n          showBroadphase: false,\n          showBounds: false,\n          showVelocity: false,\n          showCollisions: false,\n          showSeparations: false,\n          showAxes: false,\n          showPositions: false,\n          showAngleIndicator: false,\n          showIds: false,\n          showShadows: false,\n          showVertexNumbers: false,\n          showConvexHulls: false,\n          showInternalEdges: false,\n          showMousePosition: false\n        }\n      })\n\n      Render.run(this.render)\n\n      // create runner\n      var runner = Runner.create()\n      Runner.run(runner, engine)\n\n      // add mouse control\n      this.mouse = Mouse.create(this.render.canvas)\n\n      this.mouseConstraint = MouseConstraint.create(engine, {\n        mouse: this.mouse,\n        constraint: {\n          stiffness: 0.2,\n          render: {\n            visible: false\n          }\n        }\n      })\n\n      // allow scroll on canva\n      this.mouseConstraint.mouse.element.removeEventListener('mousewheel', this.mouseConstraint.mouse.mousewheel)\n      this.mouseConstraint.mouse.element.removeEventListener('DOMMouseScroll', this.mouseConstraint.mouse.mousewheel)\n\n      World.add(world, this.mouseConstraint)\n\n      // keep the mouse in sync with rendering\n      this.render.mouse = this.mouse\n\n      const circle1 = Bodies.circle(window.innerWidth - 300, window.innerHeight - 300, 80, {\n        friction: 1,\n        restitution: 1.2,\n        isStatic: false,\n        render: { strokeStyle: 'black', lineWidth: 3, fillStyle: 'transparent' }\n      })\n\n      const circle2 = Bodies.circle(window.innerWidth - 200, window.innerHeight - 500, 80, {\n        friction: 0.2,\n        restitution: 1,\n        isStatic: false,\n        render: { strokeStyle: 'black', lineWidth: 3, fillStyle: 'black' }\n      })\n\n      this.movingShape1 = Bodies.rectangle(-window.innerWidth, window.innerHeight - 50, window.innerWidth, window.innerHeight * 0.25, {\n        friction: 1,\n        restitution: 1,\n        isStatic: true,\n        render: { fillStyle: 'black' }\n      })\n\n      this.movingShape2 = Bodies.rectangle(window.innerWidth * 2, window.innerHeight - 50, window.innerWidth, window.innerHeight * 0.25, {\n        friction: 1,\n        restitution: 1,\n        isStatic: true,\n        render: { fillStyle: 'black' }\n      })\n\n      const leftWall = Bodies.rectangle(-25, 300, 50, 800, {\n        isStatic: true,\n        friction: 0\n      })\n\n      // const rightWall = Bodies.rectangle(window.innerWidth, 300, 50, 800, {\n      //   isStatic: true,\n      //   friction: 0\n      // })\n\n      World.add(world, [circle1, circle2, this.movingShape1, this.movingShape2])\n      World.add(world, [Bodies.rectangle(300, window.innerHeight, window.innerWidth * 2, 20, { isStatic: true }), leftWall])\n    },\n    resizeWindow() {\n      this.init()\n      // this.render.bounds.max.x = this.$refs.canva.getBoundingClientRect().width\n      // this.render.bounds.max.y = this.$refs.canva.getBoundingClientRect().height\n      // this.render.options.width = this.$refs.canva.getBoundingClientRect().width\n      // this.render.options.height = this.$refs.canva.getBoundingClientRect().height\n      // this.render.canvas.width = window.innerWidth\n      // console.log(window.innerWidth, this.render.canvas.width, this.$refs.canva.getBoundingClientRect().width)\n    },\n    mouseMove: function (event) {\n      // this.xCursor = event.clientX\n      this.xCursor.set({ x: event.clientX })\n      setInterval(() => {\n        this.Body.setPosition(this.movingShape2, { x: this.xCursor.x + window.innerWidth * 0.65, y: this.movingShape2.position.y })\n        this.Body.setPosition(this.movingShape1, { x: this.xCursor.x - window.innerWidth / 2, y: this.movingShape1.position.y })\n      }, 10)\n      // this.Body.setPosition(this.movingShape1, { x: this.xCursor - window.innerWidth / 2, y: this.movingShape1.position.y })\n    },\n    updateGravity(event) {\n      var orientation = typeof window.orientation !== 'undefined' ? window.orientation : 0\n      this.gravity = this.engine.gravity\n\n      if (orientation === 0) {\n        this.gravity.x = this.Common.clamp(event.gamma, -90, 90) / 90\n        this.gravity.y = this.Common.clamp(event.beta, -90, 90) / 90\n      } else if (orientation === 180) {\n        this.gravity.x = this.Common.clamp(event.gamma, -90, 90) / 90\n        this.gravity.y = this.Common.clamp(-event.beta, -90, 90) / 90\n      } else if (orientation === 90) {\n        this.gravity.x = this.Common.clamp(event.beta, -90, 90) / 90\n        this.gravity.y = this.Common.clamp(-event.gamma, -90, 90) / 90\n      } else if (orientation === -90) {\n        this.gravity.x = this.Common.clamp(-event.beta, -90, 90) / 90\n        this.gravity.y = this.Common.clamp(event.gamma, -90, 90) / 90\n      }\n    },\n    listen() {\n      this.accelerometer = window.screen.orientation.type\n      // var x = event.accelerationIncludingGravity.x\n      // var y = event.accelerationIncludingGravity.y\n      // var z = event.accelerationIncludingGravity.z\n      // this.accelerometer = [x, y, z]\n      // Do something awesome.\n    }\n  }\n}\n</script>\n\n<style>\nbody {\n  margin: 0;\n  padding: 0;\n}\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  background: #f3ff00;\n  width: 100vw;\n  height: 100vh;\n}\n\n#section1 {\n  background: #f3ff00;\n}\n</style>\n"]}]}